assistant  = ImportComponent["assistant.wlx"];
user       = ImportComponent["user.wlx"];

Global`ChatRunMarkdownProcessor(*`*);

printMessages[item_, chat_] := Switch[item["role"],
"assistant",
    assistant[item, chat],

"user",
    user[item, chat],

_,
    ""
]

updateContainer[old_, new_, chat_, controller_, io_, client_] := With[{
    diff = Complement[new, old]
},
    (EventFire[controller, "Prepend", <|"Data" -> printMessages[#, chat], "Client"->client, "ApplyAfter"->(Global`ChatRunMarkdownProcessor(*`*))|>]) &/@ diff;
    old = new;

    If[Length[diff] > 0, 
        EventFire[io, "Scroll", <|"Client" -> client|>];
    ];
]

SetAttributes[updateContainer, HoldFirst];

Component[OptionsPattern[]] := Module[{state = {}}, With[{
    chat = OptionValue["Chat"],
    globalController = OptionValue["Controller"],
    controller = CreateUUID[],
    io = CreateUUID[]
},

state = chat["Messages"];

EventHandler[globalController, {
    "Mount" -> Function[client,
        With[{socket = EventClone[client]},
            With[{cloned = EventClone[chat]},
                Echo["Mounted Fire!"];
                EventHandler[cloned, {
                    "Update" -> Function[messages,
                        Echo["Update container"];
                        updateContainer[state, messages, chat, controller, io, client]
                    ],

                    "Complete" -> Function[messages,
                        updateContainer[state, messages, chat, controller, io, client]
                    ]
                }];
            

                EventHandler[socket, {
                    "Closed" -> Function[Null,
                        EventRemove[socket];
                        EventRemove[cloned];
                        Echo["ChatMessages >> Destoryed"];
                    ]
                }];
            ]
        ];
    ]
}];

With[{
    ChatList = Table[
        printMessages[item, chat]
    , {item, state}]
},
 {
    <div id="chat-list" class="px-4 py-2 h-full sc-b overflow-y-auto scroll-snap-y-container scroll-smooth text-gray-500 dark:text-gray-400">
        <ul role="list" class="space-y-6">
            <ChatList/>
            <WebUIContainer Event={controller}>
            	    <WebUIContainerChild/>
            </WebUIContainer>
        </ul>
    </div>
 ,
    <WebUIJSBind Event={io}>
        const element = document.getElementById("chat-list").firstChild;
        this.on('Scroll', () => {
            console.log('scroll into view');
            element.lastChild.scrollIntoView();
        });
    </WebUIJSBind>
 } // StringRiffle
] ] ];

Options[Component] = {"Chat" -> "", "Controller"->""}

Component