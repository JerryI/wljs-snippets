<|"notebook" -> <|"name" -> "Bestiary", "id" -> "syllabub-6b758", 
   "kernel" -> LocalKernel, "objects" -> <||>, "path" -> "/Volumes/Data/Githu\
b/wolfram-js-frontend/Packages/wljs-snippets/library/crossbar.wln", 
   "cell" :> Exit[], "date" -> DateObject[{2023, 9, 21, 10, 23, 
      1.963344`7.045571388442865}, "Instant", "Gregorian", 2.], 
   "symbols" -> <||>, "channel" -> WebSocketChannel[
     KirillBelov`WebSocketHandler`WebSocketChannel`$19], 
   "SelectedCell" -> "348ca7f7-a1ec-4ba8-bd4d-7c879275d8585fa"|>, 
 "cells" -> {<|"id" -> "7d58050c-7269-4783-8bce-d08d797bfa2a5fa", 
    "type" -> "input", "data" -> 
     ".md\n## Crossbar\nPuts a crossbar on your plots", 
    "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "2f64c921-b2c8-421a-a06d-e4ea941354b45fa", "type" -> "output", 
    "data" -> "\n## Crossbar\nPuts a crossbar on your plots", 
    "display" -> "markdown", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "6a5f0a09-d00b-44e3-9590-983bc58e71865fa", "type" -> "input", 
    "data" -> "crossBar[handler_:Null, size_:{1000,1000}, \
color_:RGBColor[0.3,0.5,0.8]]", "display" -> "codemirror", 
    "sign" -> "syllabub-6b758", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "652cdbb0-541d-4f41-a2d3-ff7f2efff5f65fa", "type" -> "input", 
    "data" -> ".md\nUse `handler` for other function to take input of the \
crossbar position", "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "225de83e-48cd-4e61-b352-7a4d46204ff55fa", "type" -> "input", 
    "data" -> ".md\nPaste this function into your `Graphics` object. Use \
`handler` to pass the data of the current position to some other function", 
    "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "fcefe55c-3cbf-4758-9e5c-3f63bd53adb3", "type" -> "output", 
    "data" -> "\nPaste this function into your `Graphics` object. Use \
`handler` to pass the data of the current position to some other function", 
    "display" -> "markdown", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "348ca7f7-a1ec-4ba8-bd4d-7c879275d8585fa", "type" -> "input", 
    "data" -> ".exports\ncrossBar[handler_:Null, size_:{1000,1000}, \
color_:RGBColor[0.3,0.5,0.8]] := LeakyModule[{cross, crossMove},\n\n  \
crossMove = Function[xy, cross = xy; handler[xy]];\n  cross = {0,0}; \n  \
With[{sX = size[[1]], sY = size[[2]]},\n   {{Opacity[0], \
EventHandler[Rectangle[{-sX, sY}, {sX, -sY}], {\"mousemove\"->crossMove}]},\n \
   {Opacity[0.8], color, \n      Line[With[{c = cross}, {{c[[1]], -sY}, \
{c[[1]], sY}}]] // Offload, \n      Line[With[{c = cross}, {{-sX, c[[2]]}, \
{sX, c[[2]]}}]] // Offload\n    }}\n  ]\n]", "display" -> "codemirror", 
    "sign" -> "syllabub-6b758", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "29fb0233-e9df-4c5f-8708-385d89982b26", "type" -> "input", 
    "data" -> ".md\n## Example\n### Together with `Plot`", 
    "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "85209690-a692-4adb-917f-727a52acd4b8", "type" -> "output", 
    "data" -> "\n## Example\n### Together with `Plot`", 
    "display" -> "markdown", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "c40ea7e2-6e44-46fb-9f93-561c744aa46c", "type" -> "input", 
    "data" -> "Plot[BesselJ[0,x], {x,0,16}, Epilog->{crossBar[]}]", 
    "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "f30d17c2-e05f-4a33-b723-09da216b930b", "type" -> "input", 
    "data" -> ".md\nOr to remove __the smoothing__, apply the corresponding \
option to `Graphics`", "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "539f4722-1bfa-424d-a77b-26add1f05767", "type" -> "output", 
    "data" -> "\nOr to remove __the smoothing__, apply the corresponding \
option to `Graphics`", "display" -> "markdown", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "a25099ce-8049-4ca8-9028-3a28d834509d", "type" -> "input", 
    "data" -> "Insert[Plot[BesselJ[0,x], {x,0,16}, Epilog->{crossBar[]}], \
TransitionDuration->10, {2,-1}]", "display" -> "codemirror", 
    "sign" -> "syllabub-6b758", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "c8067444-38c6-4f68-9a0c-94b99652ceac", "type" -> "input", 
    "data" -> ".md\nTo get more freedom, use `Controls`", 
    "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "95a48e24-84ad-4ce7-9804-a0c3587ca97b", "type" -> "output", 
    "data" -> "\nTo get more freedom, use `Controls`", 
    "display" -> "markdown", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "28daffc5-8ab4-4bec-bfde-b33fd5e65bbd", "type" -> "input", 
    "data" -> "Insert[Insert[Plot[BesselJ[0,x], {x,0,16}, \
Epilog->{crossBar[]}], TransitionDuration->10, {2,-1}], Controls->True, \
{2,-1}]", "display" -> "codemirror", "sign" -> "syllabub-6b758", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "29443a93-7171-4ba5-a478-1c710a1eea98", "type" -> "input", 
    "data" -> ".md\n### Adding a window with coordinates\nThe same example, \
but now one can show the exact coordinates", "display" -> "codemirror", 
    "sign" -> "syllabub-6b758", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "9e0e46fa-2334-4dd8-abeb-e9ff78e1dba3", "type" -> "output", 
    "data" -> "\n### Adding a window with coordinates\nThe same example, but \
now one can show the exact coordinates", "display" -> "markdown", 
    "sign" -> "syllabub-6b758", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "d781b53f-6740-43a4-a56c-17d61c07f52d", "type" -> "input", 
    "data" -> "coords = \"{0,0}\";\nPlot[BesselJ[0,x], {x,0,16}, \
Epilog->{crossBar[(coords = ToString[# // Chop])&]}]\nTextView[coords // \
Offload] // CreateFrontEndObject", "display" -> "codemirror", 
    "sign" -> "syllabub-6b758", "props" -> <|"hidden" -> False|>|>}, 
 "serializer" -> "jsfn3"|>
