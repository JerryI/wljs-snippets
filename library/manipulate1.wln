<|"notebook" -> <|"name" -> "Bestiary", "id" -> "toenail-6e056", 
   "kernel" -> LocalKernel, "objects" -> <||>, "path" -> "/Volumes/Data/Githu\
b/wolfram-js-frontend/Packages/wljs-snippets/library/manipulate1.wln", 
   "cell" :> Exit[], "date" -> DateObject[{2023, 10, 19, 15, 58, 
      28.057343`8.200621522945285}, "Instant", "Gregorian", 2.], 
   "symbols" -> <||>, "channel" -> WebSocketChannel[
     KirillBelov`WebSocketHandler`WebSocketChannel`$23], 
   "SelectedCell" -> "348ca7f7-a1ec-4ba8-bd4d-7c879275d8585fa79a285ba5"|>, 
 "cells" -> {<|"id" -> "7d58050c-7269-4783-8bce-d08d797bfa2a5fa79a285ba5", 
    "type" -> "input", "data" -> ".md\n## Manipulate 1 parameter\nA \
boilerplate for dynamic plot with experimental data", 
    "display" -> "codemirror", "sign" -> "toenail-6e056", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "78161e9d-6d1a-4247-8230-8b7af8fcd591", "type" -> "output", 
    "data" -> "\n## Manipulate 1 parameter\nA boilerplate for dynamic plot \
with experimental data", "display" -> "markdown", "sign" -> "toenail-6e056", 
    "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "652cdbb0-541d-4f41-a2d3-ff7f2efff5f65fa79a285ba5", 
    "type" -> "input", "data" -> ".md\nUse `handler` for other function to \
take input of the crossbar position", "display" -> "codemirror", 
    "sign" -> "toenail-6e056", "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "225de83e-48cd-4e61-b352-7a4d46204ff55fa79a285ba5", 
    "type" -> "input", "data" -> ".md\nSource code", 
    "display" -> "codemirror", "sign" -> "toenail-6e056", 
    "props" -> <|"hidden" -> True|>|>, 
   <|"id" -> "ad00e8b3-96b1-42ef-ba9a-70ab022b7861", "type" -> "output", 
    "data" -> "\nSource code", "display" -> "markdown", 
    "sign" -> "toenail-6e056", "props" -> <|"hidden" -> False|>|>, 
   <|"id" -> "348ca7f7-a1ec-4ba8-bd4d-7c879275d8585fa79a285ba5", 
    "type" -> "input", "data" -> ".export\nLeakyModule[{lines, slider, \
exp},\n  (* exp data *)\n  exp = {{Pi,0}, {2Pi,0}};\n\n  (* slider ranges \
*)\n  slider = EventHandler[InputRange[1,10,1], Function[w,\n    \
Module[{function},\n      (* your test function *)\n      function = \
Function[x, Sin[x w]];\n\n      (* data preview *)\n      lines = {#, \
function[#]}& /@ Range[1,20,0.1];\n    ];\n  ]];\n\n  slider // EventFire;\n  \
\n  {\n    slider, \n    Graphics[{FrontEndView[RGBColor[0.368417, 0.506779, \
0.709798],\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3ISSxJTWM\
GyXMgyRcVTJv0VGXKdfsiw2kvp3eYP7AvOt4yw3vVtmf2AKMBH1E=\"], Line[lines // \
Offload], FrontEndView[RGBColor[0.922526, 0.385626, \
0.209179],\"1:eJxTTMoPSmNkYGAoZgESHvk5KRCeGJAIcndyzs/JLwouTyxJzghJzS3ISSxJTWM\
GyXMgyRdd2frNLrT1rX3RHf35ayTW3bAv0nBnXJRw7JQ9AKbfHmU=\"], PointSize[0.04], \
Point[exp]}, Axes->True]\n  } // Column\n]", "display" -> "codemirror", 
    "sign" -> "toenail-6e056", "props" -> <|"hidden" -> False|>|>}, 
 "serializer" -> "jsfn3"|>
